//import log4j subsystem
const logger = require("./logger.js");

const {emoji} = require('node-emoji');

const moment = require('moment');

module.exports.init = init;
module.exports.jira = {
	getTGBotData: getJiraTGBotData
}
module.exports.email = {
	getMailboxByMail,
	getTGBotData: getEmailTGBotData
}

function init() {

}

//=============================jira functions===============================
function getJiraTGBotData(issueData) {
    let prioritySign = getPrioritySign(issueData.priority);
    let priorityName = getPriorityName(issueData.priority);

    let tgBotGroup = "JIRA_ISSUE";
    let tgBotMessage = `${emoji.zap}*–ù–æ–≤—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç –≤ Jira*\n*–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:* ${issueData.title}\n*–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:* ${priorityName + prioritySign}\n*–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${issueData.createDate}\n*–¢–∏–∫–µ—Ç:* ${issueData.url}`;

    return {tgBotGroup, tgBotMessage};
}
function getPriorityName(priorityId) {
	let priorityName;
	switch (priorityId) {
		case "1":
			priorityName = "–±–ª–æ–∫–∏—Ä—É—é—â–∏–π";
		break;
		case "2":
			priorityName = "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π";
		break;
		case "3":
			priorityName = "–æ—Å–Ω–æ–≤–Ω–æ–π";
		break;
		case "4":
			priorityName = "–º–∏–Ω–æ—Ä";
		break;
		case "5":
			priorityName = "—Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã–π";
		break;
		default:
			priorityName = "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω";
		break;
	}
	return priorityName;
}
function getPrioritySign(priorityId) {
    let prioritySign;
    switch (priorityId) {
        //–±–ª–æ–∫–∏—Ä—É—é—â–∏–π
        case "1":
            prioritySign = emoji.no_entry_sign;
        break;
        //–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π
        case "2":
            prioritySign = emoji.exclamation;
        break;
        //–æ—Å–Ω–æ–≤–Ω–æ–π
        case "3":
            prioritySign = emoji.warning;
        break;
        //–º–∏–Ω–æ—Ä
        case "4":
            prioritySign = "";
        break;
        //—Ç—Ä–∏–≤–∏–∞–ª—å–Ω—ã–π
        case "5":
            prioritySign = "";
        break;
        default:
            prioritySign = "";
        break;
    }
    return prioritySign;
}

//=============================email functions===============================
function getEmailTGBotData(parsedMessage) {
	let tgBotGroup, tgBotMessage,
        regionName = getRegionNameByMail(parsedMessage.from[0].address),
        eventTime = moment(parsedMessage.date).format("DD.MM.YYYY HH:mm:ss");

    if (parsedMessage.text) {
        if (parsedMessage.text.includes("–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞")) {
            let processName = getProcessName(parsedMessage.text);
            tgBotMessage = `${emoji.fire}*–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞*\n*–†–µ–≥–∏–æ–Ω:* ${regionName}\n*–ü—Ä–æ—Ü–µ—Å—Å:* ${processName}\n*–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${eventTime}`;
            tgBotGroup = "PROCESS_ERROR";
        } else if (parsedMessage.subject === "–ú–í-–∑–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é") {
            tgBotMessage = `üß®*–ú–í-–∑–∞–ø—Ä–æ—Å –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é*\n*–†–µ–≥–∏–æ–Ω:* ${regionName}\n*–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${eventTime}`;
            tgBotGroup = "MV_ERROR";
        } else if (parsedMessage.subject === "–ó–∞—è–≤–∫–∏ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –ú–í –∑–∞–ø—Ä–æ—Å–æ–º") {
        	tgBotMessage = `üö®*–°—Ä–∞–±–æ—Ç–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ú–í-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ö–æ—Ç—ã*\n*–†–µ–≥–∏–æ–Ω:* ${regionName}\n*–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:* ${eventTime}`;
            tgBotGroup = "OHOTA_ERROR";
        }
    } else if (!parsedMessage.html) {
        throw new Error(`Mail without text: ${parsedMessage}`);
    }
    return {tgBotGroup, tgBotMessage};
}
//function for getting region's folder
function getMailboxByMail(eMail) {
    let mailBoxPath;
    switch (eMail) {
        case "vishunt@govrb.ru":
            mailBoxPath = "INBOX/03 - –ë—É—Ä—è—Ç–∏—è";
        break;
        case "ohotbilet@rk08.ru":
        case "no-reply@rk08.ru":
            mailBoxPath = "INBOX/08 - –ö–∞–ª–º—ã–∫–∏—è";
        break;
        case "ohota@sakha.gov.ru":
            mailBoxPath = "INBOX/14 - –Ø–∫—É—Ç–∏—è";
        break;
        case "eis@oepak22.ru":
            mailBoxPath = "INBOX/22 - –ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π";
        break;
        case "mais@barnaul-adm.ru":
            mailBoxPath = "INBOX/22 - –ë–∞—Ä–Ω–∞—É–ª";
        break;
        case "ohototvet@primorsky.ru":
        	mailBoxPath = "INBOX/25 - –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫";
        break;
        case "hunt@gov-murman.ru":
            mailBoxPath = "INBOX/51 - –ú—É—Ä–º–∞–Ω—Å–∫";
        break;
        case "smartkit@nso.ru":
            mailBoxPath = "INBOX/54 - –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫";
        break;
        case "pgu@gov67.ru":
            mailBoxPath = "INBOX/67 - –°–º–æ–ª–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å";
        break;
        case "ohota.chukotka-gov.ru@yandex.ru":
            mailBoxPath = "INBOX/87 - –ß–ê–û";
        break;
        case "pgu@gosuslugi92.ru":
            mailBoxPath = "INBOX/92 - –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å";
        break;
        //—Å–¥–µ–ª–∞—Ç—å –ø–∞–ø–∫—É "–ù–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ"
        default:
            mailBoxPath = "INBOX/–ù–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ";
        break;
    }
    return mailBoxPath;
}
//function for getting region's name
function getRegionNameByMail(eMail) {
    let regionName;
    switch (eMail) {
        case "vishunt@govrb.ru":
            regionName = "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë—É—Ä—è—Ç–∏—è";
        break;
        case "hunt@gov-murman.ru":
            regionName = "–ú—É—Ä–º–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å";
        break;
        case "eis@oepak22.ru":
            regionName = "–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π";
        break;
        case "mais@barnaul-adm.ru":
            regionName = "–≥–æ—Ä–æ–¥ –ë–∞—Ä–Ω–∞—É–ª";
        break;
        case "pgu@gosuslugi92.ru":
            regionName = "–≥–æ—Ä–æ–¥ –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å";
        break;
        case "smartkit@nso.ru":
            regionName = "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å";
        break;
        case "pgu@gov67.ru":
            regionName = "–°–º–æ–ª–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å";
        break;
        case "ohotbilet@rk08.ru":
        case "no-reply@rk08.ru":
            regionName = "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞–ª–º—ã–∫–∏—è";
        break;
        case "ohota@sakha.gov.ru":
            regionName = "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–∞—Ö–∞ (–Ø–∫—É—Ç–∏—è)";
        break;
        case "ohototvet@primorsky.ru":
            regionName = "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π";
        break;
        case "ohota.chukotka-gov.ru@yandex.ru":
            regionName = "–ß–ê–û";
        break;
        default:
            regionName = "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω";
        break;
    }
    return regionName;
}
function getProcessName(emailText) {
    let processName;
    let failData = emailText.match(/({.{1,}})/gs)[0];
    if (failData) {
        try {
            let parsedFailData = JSON.parse(failData);
            processName = parsedFailData.processName;
        } catch (err) {
            processName = "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω";
        }
    } else {
        processName = "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω";
    }
    return processName;
}